{
  "name": "Data Manager",
  "tagline": "Simple data manager for nested data and dot notation access",
  "body": "# Data Manager\r\n[![Latest Version](https://img.shields.io/github/release/chrismichaels84/data-manager.svg?style=flat-square)](https://github.com/chrismichaels84/data-manager/releases)\r\n[![Documentation Status](https://readthedocs.org/projects/data-manager/badge/?version=latest)](http://data-manager.readthedocs.io/en/latest/?badge=latest)\r\n[![Software License](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square)](LICENSE.md)\r\n[![Build Status](https://img.shields.io/travis/chrismichaels84/data-manager/master.svg?style=flat-square)](https://travis-ci.org/chrismichaels84/data-manager)\r\n[![Coverage Status](https://coveralls.io/repos/chrismichaels84/data-manager/badge.svg?branch=master)](https://coveralls.io/r/chrismichaels84/data-manager?branch=master)\r\n[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/chrismichaels84/data-manager/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/chrismichaels84/data-manager/?branch=master)\r\n[![Total Downloads](https://img.shields.io/packagist/dt/michaels/data-manager.svg?style=flat-square)](https://packagist.org/packages/michaels/data-manager)\r\n\r\n[![SensioLabsInsight](https://insight.sensiolabs.com/projects/3ef3b9a4-6078-4ddf-bf0d-c84dac87f37a/big.png)](https://insight.sensiolabs.com/projects/3ef3b9a4-6078-4ddf-bf0d-c84dac87f37a)\r\n\r\nSimple data manager for nested data, dot notation access, extendability, and container interoperability.\r\n\r\nThis project began as a three part tutorial series which can be found at http://phoenixlabstech.org/2015/04/17/building-a-data-manager/\r\n\r\n## Goals\r\n  * Light weight and fluent, simple, clear API\r\n  * Manage nested data via dot-notation\r\n  * Be [composable](docs/compose.md) - integrate into current containers via traits (extras)\r\n  * Include extras for \r\n    * [Collections](docs/collections.md), \r\n    * [Loading Files](docs/load-files.md), \r\n    * [Managing IoC](docs/ioc.md) / Dependencies.\r\n  * Allow for protected data (immutable) and default values.\r\n  * IoC container should: \r\n    * Resolve via classes, factories, etc \r\n    * Configure dependencies for dependencies,\r\n    * Allow for fallbacks, preparing objects, and more.\r\n  * Full test coverage, PSR compliant, [container interoperability](https://github.com/container-interop/container-interop), and best practices\r\n\r\n    \r\n## Install\r\nVia Composer\r\n``` bash\r\n$ composer require michaels/data-manager\r\n```\r\n\r\n## Getting Started\r\nManager does exactly what you would expect: it *manages* complex items such as config data, arrays, and closures.\r\nThe best way to get started is simply instantiate `Michaels\\Manager\\Manager`\r\n\r\n```php\r\n$manager = new Michaels\\Manager\\Manager([\r\n    'some' => [\r\n        'starting' => [\r\n            'data' => 'here (optional)'\r\n        ]\r\n    ]\r\n]);\r\n// Note, you may initialize Manager with an array or any instance of Traversable (like Manager itself)\r\n\r\n/* Basic Usage. All works with dot notation as well */\r\n$manager->add('name', 'value');\r\n$manager->add('some.nested.data', 3); // Use dot notation for namespacing or nesting\r\n$manager->get('name'); // 'value'\r\n$manager->get('doesntexist', 'fallback'); // 'fallback'\r\n$manager->get('doesntexist') // throws an ItemNotFoundException with no fallback\r\n$manager->getIfHas('doesntexist') // returns a NoItemFoundMessage instead of a script-stopping exception\r\n$manager->getAll(); // returns array of all items\r\n$manager->all(); // returns array of all items\r\n$manager->exists('name'); // true\r\n$manager->exists('some.starting.data'); // true\r\n$manager->exists('nope'); // false\r\n$manager->has('something'); // alias of exist\r\n$manager->set('name', 'new-value'); // updates item\r\n$manager->remove('some.starting.data');\r\n$manager->isEmpty(); // true or false\r\n$manager->toJson(); // returns json of all items\r\necho $manager; // returns json string of all items\r\n$manager->reset($array); // rebuild with new items\r\n$manager->clear(); // empty the manager\r\n\r\n/* You can also use $manager as an array or in loops */\r\n$manager['some']['starting']['data']; // 'here (optional)'\r\n//etc\r\n\r\nforeach ($manager as $item => $value) {\r\n    // do whatever your heart desires\r\n}\r\n\r\n/* You may also push elements onto an array */\r\n$manager->set('a.b', []);\r\n$manager->push('a.b', 'c', 'd', 'e');\r\n$manager->get('a.b'); // ['c', 'd', 'e']\r\n\r\n/* Finally, you may manage values using magic methods */\r\n$manager->some()->starting()->data; // 'here (optional)'\r\n$manager->some()->item = 'item'; // sets some.item = 'item'\r\n$manager->some()->item()->drop(); // deletes some.item\r\n\r\n// Note that levels are called as a method with no params. The data is then called, updated, or set as a property.\r\n```\r\n\r\n## Advanced Features\r\nSee [documentation](http://data-manager.readthedocs.io/en/latest/) for topics like protecting data, using as an ioc container, loading files, using as an array, defaults, composing, and more.\r\n\r\n## Interoperability\r\nData Manager is [PSR compliant](http://www.php-fig.org/) and [Container Interoperability](https://github.com/container-interop/container-interop) compliant. Any oversights, please let me know.\r\n\r\n## Testing\r\nWe try for at least 80% test coverage.\r\n``` bash\r\n$ phpunit\r\n```\r\n\r\nYou may also use the **tests** under `tests/traits` to test your integrated functionality. You may have to grab these through cloning the repo. composer usually won't include tests in your `require`\r\n\r\n## Contributing\r\nContributions are welcome and will be fully credited. Please see [CONTRIBUTING](CONTRIBUTING.md) for details.\r\n\r\n## Security\r\nIf you discover any security related issues, please email chrismichaels84@gmail.com instead of using the issue tracker.\r\n\r\n## Credits\r\n- [Michael Wilson](https://github.com/chrismichaels84)\r\n- [Scott](https://github.com/smolinari)\r\n- Open an issue to join in!\r\n\r\n## License\r\nThe MIT License (MIT). Please see [License File](LICENSE.md) for more information.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}